#+TITLE: NerdTab

[[https://melpa.org/#/nerdtab][file:https://melpa.org/packages/nerdtab-badge.svg]]

[[./nerdtab.png][./nerdtab.png]]

This package gives you tabs.
But instead of the normal GUI tabs you might think of,
it provides more keyboard-oriented (and visually inadequate) tabs.

You can think of it like a winum for buffers.

* Why it's useful
  
On a small screen, you surely can handle two buffers with =switch-to-last-buffer=.
But how about three? four? five?
Don't open the buffer list and type file name and hit enter,
intead, hit =s-1/2/3= to switch between buffers.

Now you can work with multiple files on a small screen happlily!

* Screenshot

** On left

[[./s0.png][./s0.png]]

** On top

[[./s1.png][./s1.png]]

* Usage
  
Download from melpa:
#+BEGIN_SRC 
M-x package-install RET nerdtab RET
#+END_SRC

Configure with =use-package=:
#+BEGIN_SRC lisp
(use-package nerdtab
  :config 
  (global-set-key (kbd "C-c M-b") #'nerdtab-minor-mode))
#+END_SRC

** Jump
Use =nerdtab-jump-<number>= to jump to a buffer.
For example =nerdtab-jump-1=.

You can bind those functions to keys. 
On macOS, you can bind them to =s-<1..9>=. 

Alternativly, you can just click on the tab.

** Kill
Kill a buffer with =nerdtab-kill-<number>=.
For example, =nerdtab-kill-2=.

Similar to jump functions,
you can right click on a tab to kill it.

** Move
Move the current buffer's tab to nth with =nerdtab-move-<number>=.
For example =nerdtab-move-3=.

There is no mouse action for this function.

** Note
All three types of functions above are created by
definer functions of each.
They are created from 0 to 50.
And I think 50 is more than enough.
If you need more, take a look at source code in the bottom.
There are the definers.
            
* Customizations
  
If you want more highlight on tabs, set
#+BEGIN_SRC lisp
(set-face-attribute 'nerdtab-tab-face nil :inherit 'hl-line)
#+END_SRC
  
#+BEGIN_SRC lisp
(defcustom nerdtab-window-position 'left
  "The position of nerdtab window."
  :group 'nerdtab
  :type '(choice (const left)
                 (const right)
                 (const top)
                 (const bottom)))

(defcustom nerdtab-mode-line-format '(" ")
  "Mode-line format of nerdtab buffer."
  :group 'nerdtab
  :type 'plist)

(defcustom nerdtab-tab-width 15
  "Width of nerdtab tab."
  :group 'nerdtab
  :type 'number)

(defcustom nerdtab-tab-height 1
  "Height of tabs if `nerdtab-window-position' is 'top or 'bottom."
  :group 'nerdtab
  :type 'number)

(defcustom nerdtab-max-tab-vertical 50
  "Maximum number of tabs when displayed vertically."
  :group 'nerdtab
  :type 'number)

(defcustom nerdtab-max-tab-horizontal 20
  "Maximum number of tabs when displayed horizontally."
  :group 'nerdtab
  :type 'number)

(defcustom nerdtab-regex-blacklist '("\\*.*\\*")
  "The regex blacklist of buffer names.
Nerdtab does not list buffers that match any regex in this blacklist."
  :group 'nerdtab
  :type 'sexp)

(defcustom nerdtab--update-interval 2
  "Nerdtab checkes if it needs to update tab list in every this seconds."
  :group 'nerdtab
  :type 'number)

(defcustom nerdtab-buffer-list-func #'buffer-list
  "The function that provides a list of buffers to nerdtab.
Change it to =projectile-project-buffers=
to intergrate with projectile (not tested)"
  :group 'nerdtab
  :type 'function)

(defface nerdtab-tab-face
  '((t (:inherit default :underline nil)))
  "Face of tabs in nerdtab buffer."
  :group 'nerdtab)

(defface nerdtab-tab-mouse-face
  '((t (:inherit highlight :underline nil)))
  "Face of tabs under mouse in nerdtab buffer."
  :group 'nerdtab)

(defvar nerdtab-buffer-name "*nerdtab*"
  "Name of nerdtab buffer.")

(defvar nerdtab-open-func #'switch-to-buffer
  "The function to open buffer.
Used in tab button and nerdtab-jump functions.

The function should take a singgle buffer as argument.")
#+END_SRC
